var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"using Markdown\nMarkdown.parse(\"\"\"\n$(read(\"../../README.md\",String))\n\"\"\")","category":"page"},{"location":"#Notations","page":"Home","title":"Notations","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The package accesses Unitful.jl to allow to define floating point constants like cm, kPa, mV etc. called unit factors which are factors relative to products of powers of  unitful preferred units in the sense of Unitful.jl. By default these unitful preferred units are synonymous with the SI base units. However, by calling Unitful.preferunits these reference values can be changed.","category":"page"},{"location":"#API","page":"Home","title":"API","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"unitfactor\n@ufac_str\n@unitfactors\nunitful\nUnitful.FreeUnits\n@phconstants","category":"page"},{"location":"#LessUnitful.unitfactor","page":"Home","title":"LessUnitful.unitfactor","text":"unitfactor(quantity)\n\nCalculate the unit factor, from a given quantity. This is the numerical value of the quantity in unitful preferred units, see Notations. See unitful for the reciprocal operation.\n\nExample:\n\njulia> unitfactor(u\"1mV\")\n0.001\njulia> u\"1mV\"|> unitfactor\n0.001\n\n\n\n\n\n","category":"function"},{"location":"#LessUnitful.@ufac_str","page":"Home","title":"LessUnitful.@ufac_str","text":"@ufac_str\n\nObtain the unit factor of a quantity  – its numerical value when converted to unitful preferred units.\n\nExample:\n\njulia> ufac\"1mV\"\n0.001\n\n\n\n\n\n","category":"macro"},{"location":"#LessUnitful.@unitfactors","page":"Home","title":"LessUnitful.@unitfactors","text":"@unitfactors\n\nDeclare unit factors as global constants.\n\nExample\n\njulia> @unitfactors cm\n0.01\njulia> 3cm\n0.03\n\n@unitfactors cm is equivalent to\n\nconst cm = ustrip(upreferred(u\"1.0cm\"))\n\nand we can declare multiple unit factors at once:\n\n@unitfactors mm cm km A V\n\n\n\n\n\n","category":"macro"},{"location":"#LessUnitful.unitful","page":"Home","title":"LessUnitful.unitful","text":"unitful(x,unit)\n\nMake number x \"unitful\". Assume x represents an unit factor with respect to a unitful preferred unit. Create a unitful quantity in that unit and convert it to unit.  See unitfactor for the reciprocal operation.\n\nExample\n\njulia> unitful(200,u\"kPa\")\n0.2 kPa\n\nEquivalent to \n\nunit((Float64(x)*Unitful.upreferred(unit)))\n\n\n\n\n\n","category":"function"},{"location":"#Unitful.FreeUnits","page":"Home","title":"Unitful.FreeUnits","text":"(unit)(x::Real)\n\nMake number x \"unitful\" by calling unitful.\n\nExample\n\njulia> u\"kPa\"(200)\n0.2 kPa\n\njulia> 200 |> u\"kPa\"\n0.2 kPa\n\nThis may be convenient when printing with units: Instead of \n\n@unitfactors μA  mA\nx = 15mA\nprintln(x/μA,\" μA\")\n# output\n15000.0 μA\n\none can use \n\n@unitfactors μA  mA\nx = 15mA\nprintln(x|>u\"μA\")  \n# output\n15000.0 μA\n\n\n\n\n\n","category":"type"},{"location":"#LessUnitful.@phconstants","page":"Home","title":"LessUnitful.@phconstants","text":"@phconstants\n\nDeclare numerical values of physical constants as unit factors with respect to unitful preferred units as constants.  The information is obtained from PhysicalConstants.CODATA2018\n\nExample:\n\n@phconstants N_A\n# output\n6.02214076e23\n\nThis is equivalent to\n\nconst N_A = ustrip(upreferred(PhysicalConstants.CODATA2018.N_A))\n\nand we can \"declare\" multiple constants\n\n@phconstants AvogadroConstant c_0\n\n\n\n\n\n","category":"macro"}]
}
